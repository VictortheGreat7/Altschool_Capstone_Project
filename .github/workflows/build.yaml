name: Deploy Infrastructure and Configure AKS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.4

    - name: Cache Terraform plugins
      uses: actions/cache@v3
      with:
        path: ~/.terraform.d/plugin-cache
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.30.3'

    - name: Install Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository --yes --update ppa:ansible/ansible
        sudo apt-get install -y ansible

    - name: Decrypt Ansible Vault
      env:
        ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
      run: |
        echo "$ANSIBLE_VAULT_PASSWORD" > vault_password.txt
        ansible-vault decrypt terraform.tfvars --vault-password-file vault_password.txt
      working-directory: ./capstone_terraform

    - name: Run inline bash script
      run: |
        chmod +x pre-apply.sh
        chmod +x authorized_ips.sh
        ./pre-apply.sh
        ./authorized_ips.sh
      working-directory: ./capstone_terraform

    - name: Terraform Init
      run: terraform init
      working-directory: ./capstone_terraform

    - name: Terraform Apply
      run: terraform apply --auto-approve
      working-directory: ./capstone_terraform

    - name: Commit .terraform.lock.hcl
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add .terraform.lock.hcl
        git commit -m "Update .terraform.lock.hcl"
        git push
      working-directory: ./capstone_terraform

    - name: Run Ansible Playbook
      run: |
        ansible-playbook clusterconfig_playbook.yaml --vault-password-file vault_password.txt

    - name: Clean up
      if: always()
      run: rm -f vault_password.txt